#State of the program right berfore the function call: n is a positive integer such that 1 ≤ n ≤ 10^9.
def func():
    n = int(input())
    l, ans = len(str(n)), 4444477777
    if (l & 1) :
        l += 1
    #State of the program after the if block has been executed: *`n` is a positive integer, `l` is the length of the string representation of `n`, and `ans` is 4444477777. If `l` is odd, then `l` becomes an even integer while `ans` remains 4444477777. There is no else part affecting the state of `ans` or `n`.
    for i in range(l, 10, 2):
        for x in product('74', repeat=i):
            if x.count('7') == x.count('4'):
                tem = int(''.join(x))
                if tem >= n:
                    ans = min(ans, tem)
        
    #State of the program after the  for loop has been executed: `n` is a positive integer, `l` is at least 10, `ans` is the minimum valid combination with equal counts of '7's and '4's that is greater than or equal to `n`, or remains `4444477777` if no such combination exists, `i` is 10 or greater, and `x` has exhausted all combinations generated by the product of '74' repeated `i` times.
    print(ans)
#Overall this is what the function does:The function accepts a positive integer input `n` and calculates the smallest integer composed of equal numbers of the digits '4' and '7' that is greater than or equal to `n`. If no such number exists within the range checked, it defaults to returning `4444477777`. The function does not return any value but prints the result directly.

