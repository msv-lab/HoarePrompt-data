The provided function `func_4` does not seem to relate to the problem description given. The function `func_4` searches for all occurrences of a substring within a string and returns their indices. This function does not contribute to solving the problem described in the problem statement.

Given the problem description and the function signature, I will extract the precondition based on the variables in the function signature. However, since the function signature does not match the problem, I will provide the precondition based on the problem description instead.

### Problem Description
Alex is solving a problem where he has \( n \) constraints on what the integer \( k \) can be. There are three types of constraints:
1. \( k \) must be greater than or equal to some integer \( x \).
2. \( k \) must be less than or equal to some integer \( x \).
3. \( k \) must be not equal to some integer \( x \).

We need to find the number of integers \( k \) that satisfy all \( n \) constraints.

### Precondition
**t is an integer such that 1 ≤ t ≤ 500, representing the number of test cases. For each test case, n is an integer such that 2 ≤ n ≤ 100, representing the number of constraints. Each constraint is represented by a pair (a, x) where a is an integer in \{1, 2, 3\} and 1 ≤ x ≤ 10^9. Constraints of type 1 and type 2 are guaranteed to exist, and all pairs (a, x) are distinct.**