#State of the program right berfore the function call: t is a positive integer such that 1 <= t <= 10^4, each test case consists of two integers n and k where 2 <= k <= n <= 2 * 10^5 and k is even, and the sum of n for all test cases does not exceed 2 * 10^5.
def func():
    for _ in range(int(input())):
        n, k = map(int, input().split())
        
        array = list(range(1, n + 1))
        
        answer = [1]
        
        a = [1, -1]
        
        for i in range(1, n):
            if (-1) ** i == -1:
                answer.append(array[a[-1]])
                a[-1] -= 1
            else:
                answer.append(array[a[0]])
                a[0] += 1
        
        print(*answer)
        
    #State: Output State: t test cases are processed, each test case outputs a sequence of numbers. For each test case, given integers n and k (where k is even), the output is a sequence generated by a specific algorithm that alternates between two indices of an array from 1 to n. The first element of the output sequence is always 1, followed by a pattern that depends on the values of n and k.
#Overall this is what the function does:The function processes up to 10,000 test cases, each consisting of two integers \( n \) and \( k \) (where \( 2 \leq k \leq n \leq 2 \times 10^5 \) and \( k \) is even). For each test case, it generates and prints a sequence of numbers based on the values of \( n \) and \( k \). The sequence starts with 1 and alternates between two indices of an array containing numbers from 1 to \( n \).

