#State of the program right berfore the function call: t is an integer where 1 \le t \le 10^4, n is an integer where 2 \le n \le 2 \cdot 10^5, a is a list of n integers where 1 \le a_i \le 10^6, q is an integer where 1 \le q \le 2 \cdot 10^5, and each query is represented by two integers l and r where 1 \le l < r \le n. The sum of n and q across all test cases does not exceed 2 \cdot 10^5.
def func():
    R = lambda : map(int, input().split())
    t, = R()
    while t:
        t -= 1
        
        *_, k = R()
        
        a = {*R()}
        
        b = {*R()}
        
        f = 1
        
        m = n = k // 2
        
        for i in range(1, k + 1):
            u = i in a
            v = i in b
            f &= u | v
            m -= u & ~v
            n -= ~u & v
        
        print('YNEOS'[f ^ 1 or m | n < 0::2])
        
    #State: `t` is 0, `n` is the number of integers from 1 to `k` that are in `a` but not in `b` for the last iteration, `m` is the number of integers from 1 to `k` that are in `a` but not in `b` for the last iteration, `f` is 1 if every integer from 1 to `k` is in either `a` or `b` for the last iteration, otherwise `f` is 0, `a` and `b` are the sets of integers generated by the function `R()` in the last iteration, `k` is the last integer in the input split by spaces for the last iteration, `q` remains an integer where 1 ≤ q ≤ 2 · 10^5.
#Overall this is what the function does:The function processes a series of test cases. For each test case, it reads two sets of integers `a` and `b` of length `k`, and checks if every integer from 1 to `k` is present in either `a` or `b`. It also calculates the number of integers from 1 to `k` that are in `a` but not in `b` (`m`), and the number of integers from 1 to `k` that are in `b` but not in `a` (`n`). The function prints "YES" if every integer from 1 to `k` is in either `a` or `b` and both `m` and `n` are non-negative; otherwise, it prints "NO". After processing all test cases, `t` is 0, and the final values of `a`, `b`, `f`, `m`, `n`, and `k` are those from the last test case. The function does not return any value.

