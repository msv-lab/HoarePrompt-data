The function `func_2` accepts two non-negative integers `a` and `b` where \(1 \le a, b \le 10^9\) and \(b \neq 0\). It uses a recursive approach to compute the extended greatest common divisor (GCD) of `a` and `b`. Specifically, it returns the values `(x, y)` such that \(ax + by = \text{gcd}(a, b)\).

- If `b == 0`, the function directly returns `(1, 0)`, which corresponds to the base case where the GCD is `a` itself, and `x` and `y` can be set to 1 and 0 respectively to satisfy the equation \(a*1 + 0*0 = a\).
- For other cases, the function recursively calls itself with arguments `(b, a % b)` and computes the values `(x, y)` from the recursive call. Then, it returns `(y, x - a // b * y)`, ensuring that the equation \(ax + by = \text{gcd}(a, b)\) holds true.