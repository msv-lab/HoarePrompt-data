Task ID,Dataset,model_created,model_run,description,Code,Test Result,Correctness,Post,original correctness,naive correctness,annotated correctness,annotated correctness simple,naive no fsl correctness,Correctness no fsl,data file,simple verify,complex verify,default verify,simple verify no fsl,complex verify no fsl,default verify no fsl,unique_id,consistency
125,mbppplus,llama3point1-70b,qwen2.5-7b-instruct,"Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.","def list_split(lst, n):
    return [lst[i::n] for i in range(n)]
",,False,post,True,False,True,True,True,True,selected_pilot_75_mbpp.json,False,False,False,True,True,False,125_llama3point1-70b,0.5
14,mbppplus,llama3point1-70b,qwen2.5-7b-instruct,Write a function to find whether a given array of integers contains any duplicate element.,"def test_duplicate(arr):
    return len(arr) != len(set(arr))
",,True,post,True,True,True,True,True,False,selected_pilot_75_mbpp.json,True,True,True,True,True,False,14_llama3point1-70b,0.6666666666666666
326,mbppplus,llama3point1-70b,qwen2.5-7b-instruct,Write a python function to find the minimum difference between any two elements in a given array.,"def find_min_diff(arr, target):
    arr = sorted(arr)
    min_diff = float('inf')
    for i in range(len(arr) - 1):
        diff = abs(arr[i] - arr[i + 1])
        if diff < min_diff:
            min_diff = diff
    return min_diff
",,False,post,True,True,True,True,True,False,selected_pilot_75_mbpp.json,True,True,False,True,False,False,326_llama3point1-70b,0.6666666666666666
302,mbppplus,gpt-4o,qwen2.5-7b-instruct,Write a function to find the index of the first occurrence of a given number in a sorted array.,"def find_first_occurrence(arr, target):
    low, high = 0, len(arr) - 1
    result = -1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            result = mid
            high = mid - 1  # Look on the left side of mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return result

# Test cases
assert find_first_occurrence([2, 5, 5, 5, 6, 6, 8, 9, 9, 9], 5) == 1
assert find_first_occurrence([2, 3, 5, 5, 6, 6, 8, 9, 9, 9], 5) == 2
assert find_first_occurrence([1, 2, 4, 5, 6, 6, 8, 9, 9, 9], 6) == 4
",,False,post,True,True,True,False,True,False,selected_pilot_75_mbpp.json,False,True,False,True,True,False,302_gpt-4o,0.6666666666666666
125,mbppplus,llama3point1-70b,qwen2.5-7b-instruct,"Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.","def list_split(lst, n):
    return [lst[i::n] for i in range(n)]
",,False,post,True,False,True,True,True,True,selected_pilot_75_mbpp.json,False,False,False,True,True,True,125_llama3point1-70b,0.5
14,mbppplus,llama3point1-70b,qwen2.5-7b-instruct,Write a function to find whether a given array of integers contains any duplicate element.,"def test_duplicate(arr):
    return len(arr) != len(set(arr))
",,True,post,True,True,True,True,True,False,selected_pilot_75_mbpp.json,True,True,True,True,True,True,14_llama3point1-70b,0.6666666666666666
326,mbppplus,llama3point1-70b,qwen2.5-7b-instruct,Write a python function to find the minimum difference between any two elements in a given array.,"def find_min_diff(arr, target):
    arr = sorted(arr)
    min_diff = float('inf')
    for i in range(len(arr) - 1):
        diff = abs(arr[i] - arr[i + 1])
        if diff < min_diff:
            min_diff = diff
    return min_diff
",,True,post,True,True,True,True,True,False,selected_pilot_75_mbpp.json,True,True,False,True,True,False,326_llama3point1-70b,0.6666666666666666
302,mbppplus,gpt-4o,qwen2.5-7b-instruct,Write a function to find the index of the first occurrence of a given number in a sorted array.,"def find_first_occurrence(arr, target):
    low, high = 0, len(arr) - 1
    result = -1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            result = mid
            high = mid - 1  # Look on the left side of mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return result

# Test cases
assert find_first_occurrence([2, 5, 5, 5, 6, 6, 8, 9, 9, 9], 5) == 1
assert find_first_occurrence([2, 3, 5, 5, 6, 6, 8, 9, 9, 9], 5) == 2
assert find_first_occurrence([1, 2, 4, 5, 6, 6, 8, 9, 9, 9], 6) == 4
",,True,post,True,False,True,True,False,True,selected_pilot_75_mbpp.json,False,False,False,False,False,False,302_gpt-4o,0.6666666666666666
125,mbppplus,llama3point1-70b,qwen2.5-7b-instruct,"Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.","def list_split(lst, n):
    return [lst[i::n] for i in range(n)]
",,True,post,True,False,True,True,True,True,selected_pilot_75_mbpp.json,False,False,False,True,True,True,125_llama3point1-70b,0.5
14,mbppplus,llama3point1-70b,qwen2.5-7b-instruct,Write a function to find whether a given array of integers contains any duplicate element.,"def test_duplicate(arr):
    return len(arr) != len(set(arr))
",,True,post,True,True,True,True,False,True,selected_pilot_75_mbpp.json,True,True,True,False,False,False,14_llama3point1-70b,0.6666666666666666
326,mbppplus,llama3point1-70b,qwen2.5-7b-instruct,Write a python function to find the minimum difference between any two elements in a given array.,"def find_min_diff(arr, target):
    arr = sorted(arr)
    min_diff = float('inf')
    for i in range(len(arr) - 1):
        diff = abs(arr[i] - arr[i + 1])
        if diff < min_diff:
            min_diff = diff
    return min_diff
",,True,post,True,True,True,True,True,False,selected_pilot_75_mbpp.json,True,True,True,True,True,True,326_llama3point1-70b,0.6666666666666666
302,mbppplus,gpt-4o,qwen2.5-7b-instruct,Write a function to find the index of the first occurrence of a given number in a sorted array.,"def find_first_occurrence(arr, target):
    low, high = 0, len(arr) - 1
    result = -1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            result = mid
            high = mid - 1  # Look on the left side of mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return result

# Test cases
assert find_first_occurrence([2, 5, 5, 5, 6, 6, 8, 9, 9, 9], 5) == 1
assert find_first_occurrence([2, 3, 5, 5, 6, 6, 8, 9, 9, 9], 5) == 2
assert find_first_occurrence([1, 2, 4, 5, 6, 6, 8, 9, 9, 9], 6) == 4
",,False,post,True,True,True,True,False,True,selected_pilot_75_mbpp.json,True,True,True,False,False,False,302_gpt-4o,0.6666666666666666
125,mbppplus,llama3point1-70b,qwen2.5-7b-instruct,"Write a function that takes in a list and an integer n and splits a list for every nth element, returning a list of the resulting lists.","def list_split(lst, n):
    return [lst[i::n] for i in range(n)]
",,True,post,True,False,True,False,True,False,selected_pilot_75_mbpp.json,False,False,False,True,True,True,125_llama3point1-70b,0.5
14,mbppplus,llama3point1-70b,qwen2.5-7b-instruct,Write a function to find whether a given array of integers contains any duplicate element.,"def test_duplicate(arr):
    return len(arr) != len(set(arr))
",,True,post,True,True,True,True,False,True,selected_pilot_75_mbpp.json,True,True,True,False,False,False,14_llama3point1-70b,0.6666666666666666
326,mbppplus,llama3point1-70b,qwen2.5-7b-instruct,Write a python function to find the minimum difference between any two elements in a given array.,"def find_min_diff(arr, target):
    arr = sorted(arr)
    min_diff = float('inf')
    for i in range(len(arr) - 1):
        diff = abs(arr[i] - arr[i + 1])
        if diff < min_diff:
            min_diff = diff
    return min_diff
",,True,post,True,True,True,True,True,False,selected_pilot_75_mbpp.json,True,False,False,True,True,False,326_llama3point1-70b,0.6666666666666666
302,mbppplus,gpt-4o,qwen2.5-7b-instruct,Write a function to find the index of the first occurrence of a given number in a sorted array.,"def find_first_occurrence(arr, target):
    low, high = 0, len(arr) - 1
    result = -1
    while low <= high:
        mid = (low + high) // 2
        if arr[mid] == target:
            result = mid
            high = mid - 1  # Look on the left side of mid
        elif arr[mid] < target:
            low = mid + 1
        else:
            high = mid - 1
    return result

# Test cases
assert find_first_occurrence([2, 5, 5, 5, 6, 6, 8, 9, 9, 9], 5) == 1
assert find_first_occurrence([2, 3, 5, 5, 6, 6, 8, 9, 9, 9], 5) == 2
assert find_first_occurrence([1, 2, 4, 5, 6, 6, 8, 9, 9, 9], 6) == 4
",,True,post,True,True,True,True,True,True,selected_pilot_75_mbpp.json,False,True,True,True,True,True,302_gpt-4o,0.6666666666666666
