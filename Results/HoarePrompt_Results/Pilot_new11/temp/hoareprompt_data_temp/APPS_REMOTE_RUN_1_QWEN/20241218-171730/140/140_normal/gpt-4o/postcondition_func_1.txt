The function `has_cycle` accepts a directed graph represented as a dictionary and returns whether the graph contains a cycle. Specifically, it performs a topological sorting using Kahn's algorithm (also known as the in-degree zero queue method). The function first calculates the in-degree of each node. Then, it initializes a queue with all nodes having an in-degree of 0 and counts these nodes. It processes each node in the queue by decrementing the in-degrees of its neighbors. If a neighbor's in-degree becomes 0 during this process, it is added to the queue. After processing all nodes, if the count of nodes with an in-degree of 0 is not equal to the total number of nodes (`n`), then the graph contains a cycle, and the function returns `True`. Otherwise, it returns `False`. This means that the function can handle graphs with cycles and graphs without cycles, including edge cases where the graph might have multiple components or nodes with the same in-degrees.