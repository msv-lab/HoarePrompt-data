The function `func_2` accepts three integers `m`, `a`, and `b` such that \(1 \leq m \leq 10^9\) and \(1 \leq a, b \leq 10^5\). It performs the following actions based on the GCD of `m`, `a`, and `b`:

1. If the GCD of `m`, `a`, and `b` (stored in `g`) is not 1, the function recursively calls itself with `m`, `a`, and `b` divided by `g` and multiplies the result by `g`. This ensures that `m`, `a`, and `b` are reduced to their coprime form.
2. If the current value of `m` is less than `k` (where `k` is `a + b - 1`), the function returns \(((m + 1) * (m + 2)) // 2\).
3. Otherwise, the function calculates two sums: `sum_k` as \((a + b - 1) * (a + b) // 2\) and `sum_m` as \(m * (m + 1) // 2 - (a + b - 1) * (a + b - 2) // 2\), then returns their sum.

This function effectively computes a specific mathematical expression based on the initial values of `m`, `a`, and `b`, reducing the problem size in the first case and performing calculations in the other cases.