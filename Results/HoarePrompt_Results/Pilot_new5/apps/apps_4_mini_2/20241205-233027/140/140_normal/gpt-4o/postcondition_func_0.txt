The function accepts two integers `n` (the number of vertices, where 2 ≤ n ≤ 500) and `m` (the number of directed edges, where 1 ≤ m ≤ min(n(n - 1), 100000)), along with a list of tuples `edges` representing directed edges between the vertices. It checks for cycles in the directed graph formed by these edges. If the graph does not contain any cycles, it returns 'YES'. If at least one cycle is detected, it attempts to remove edges one by one and checks again for cycles. If it finds that removing an edge results in a cycle-free graph, it returns 'YES'. If all edges are checked and cycles still exist, it ultimately returns 'NO'. The function does not handle cases where the input lists may be empty or when the edges contain invalid vertices, which could lead to unexpected behavior.