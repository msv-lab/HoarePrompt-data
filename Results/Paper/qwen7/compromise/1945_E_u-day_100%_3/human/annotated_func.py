#State of the program right berfore the function call: t is an integer such that 1 ≤ t ≤ 2⋅10^4. Each test case consists of two integers n and x such that 1 ≤ x ≤ n ≤ 2⋅10^5, and a permutation p of size n consisting of distinct integers from 1 to n.
def func_1():
    return map(int, input().split())
    #The program returns a map object containing two integers, which are the result of splitting the input string on spaces and converting each element to an integer.
#Overall this is what the function does:The function accepts no parameters and processes an input string containing two space-separated integers. It converts these integers to integers and returns a map object containing these two integers.

#State of the program right berfore the function call: t is an integer such that 1 ≤ t ≤ 2⋅10^4, each test case consists of n and x where 1 ≤ x ≤ n ≤ 2⋅10^5, and p is a list of integers representing a permutation of length n.
def func_2():
    return list(func_1())
    #The program returns a list generated by func_1(), which we do not have the definition of, but it processes the variables t, n, x, and p (a permutation list of length n).
#Overall this is what the function does:The function processes the variables t, n, x, and p (where p is a permutation list of length n), and returns a list generated by func_1(). The exact operations performed by func_1() are not specified, but it utilizes the provided variables as inputs.

