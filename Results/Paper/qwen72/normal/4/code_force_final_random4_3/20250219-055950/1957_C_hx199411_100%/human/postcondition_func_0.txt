The function `func` reads an integer `t` (1 ≤ t ≤ 10^4) indicating the number of test cases. For each test case, it reads two integers `n` (1 ≤ n ≤ 3 \cdot 10^5) and `k` (0 ≤ k ≤ n), followed by `k` pairs of integers `(r_i, c_i)` representing moves on an `n \times n` chessboard. It calculates a value `num` based on the moves: `num` is incremented by 1 if `r_i` equals `c_i`, and by 2 otherwise. The function then computes `m` as `n - num`. If `m` is 0 or 1, it prints 1. Otherwise, it calculates a dynamic programming array `dp` of length `m + 1` where `dp[1]` is 1, `dp[2]` is 3, and for each `i` from 3 to `m`, `dp[i]` is `(dp[i - 1] + (i - 1) * dp[i - 2] * 2) % (10^9 + 7)`. Finally, it prints `dp[m]` for each test case.