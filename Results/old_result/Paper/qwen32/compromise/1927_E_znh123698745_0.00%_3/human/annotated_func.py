#State of the program right berfore the function call: n and k are integers such that 2 <= k <= n <= 2 * 10^5 and k is even. The function will be called multiple times (up to 10^4 times) with different values of n and k, and the sum of all n across test cases does not exceed 2 * 10^5.
def func():
    for _ in range(int(input())):
        n, k = map(int, input().split())
        
        array = list(range(1, n + 1))
        
        answer = [1]
        
        a = [1, -1]
        
        for i in range(1, n):
            if (-1) ** i == -1:
                answer.append(array[a[-1]])
                a[-1] -= 1
            else:
                answer.append(array[a[0]])
                a[0] += 1
        
        print(*answer)
        
    #State: the `answer` list generated by the last execution of the loop, which is `[1, n, 2, n-1, 3, n-2, ..., n//2, n//2 + 1]` if `n` is even, or `[1, n, 2, n-1, 3, n-2, ..., (n+1)//2, (n+1)//2]` if `n` is odd.
#Overall this is what the function does:The function reads multiple pairs of integers `n` and `k` from the input, where `2 <= k <= n <= 2 * 10^5` and `k` is even. For each pair, it generates and prints a specific permutation of the numbers from 1 to `n`. The permutation alternates between the smallest and largest remaining numbers, starting with 1.

