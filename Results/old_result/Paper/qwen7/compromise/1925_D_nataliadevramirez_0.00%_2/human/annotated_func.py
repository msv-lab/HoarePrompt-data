#State of the program right berfore the function call: n is an integer representing the number of children, m is an integer representing the number of pairs of friends, k is an integer representing the number of excursions, and friendships is a list of tuples, where each tuple contains three integers (a, b, f) representing the indices of the pair of children who are friends and their friendship value, respectively. Additionally, MOD is a constant integer representing \(10^9 + 7\).
def func_1(n, m, k, friendships):
    result = 0
    for i in range(m):
        a, b, f = friendships[i]
        
        result += f * (k * (k + 1) // 2) % MOD
        
    #State: Output State: `result` is the sum of the friendship values (`f`) for all pairs of friends multiplied by the combination of `k` taken 2 at a time (`k * (k + 1) // 2`), all modulo `MOD`.
    return result % MOD
    #The program returns the result which is the sum of the friendship values (`f`) for all pairs of friends multiplied by the combination of `k` taken 2 at a time (`k * (k + 1) // 2`), all modulo `MOD`.
#Overall this is what the function does:The function accepts parameters `n`, `m`, `k`, and `friendships`. It calculates the sum of the friendship values (`f`) for all pairs of friends and multiplies this sum by the combination of `k` taken 2 at a time (`k * (k + 1) // 2`). The result is then returned modulo `MOD`.

#State of the program right berfore the function call: t is an integer representing the number of test cases, n is an integer representing the number of children, m is an integer representing the number of pairs of friends, k is an integer representing the number of excursions, and friendships is a list of lists where each sublist contains three integers [a_i, b_i, f_i] representing the indices of the pair of children who are friends and their friendship value respectively.
def func_2():
    t = int(input())
    for _ in range(t):
        n, m, k = map(int, input().split())
        
        friendships = [list(map(int, input().split())) for _ in range(m)]
        
        result = func_1(n, m, k, friendships)
        
        print(result)
        
    #State: After executing the loop for `t` times, the output state will consist of `t` results generated by the function `func_1`. Each result corresponds to the output of `func_1(n, m, k, friendships)` for each iteration, where `n` is the number of children, `m` is the number of pairs of friends, `k` is the number of excursions, and `friendships` is a list of friend relationships with their values. The results are printed after each iteration.
#Overall this is what the function does:The function processes multiple test cases, each involving a group of children, their friendships, and the number of excursions. For each test case, it calls the `func_1` function with the relevant parameters (number of children, number of friendships, number of excursions, and the list of friendships). After processing each test case, it prints the result returned by `func_1`. The function ultimately outputs the results of `func_1` for all test cases.

