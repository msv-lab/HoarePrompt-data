The function accepts a binary string `sChar` and converts it into a list of integers. It then iterates through the list, swapping '1's and '0's to move all '0's to the left side and all '1's to the right side. The function calculates the total cost, which is the sum of the sizes of the subarrays that need to be swapped to achieve the desired order. The cost is determined by the number of characters in the string `sChar`. If the length of `sChar` is exactly 11, the function returns 11; otherwise, it returns 11 plus the number of additional characters beyond 11.