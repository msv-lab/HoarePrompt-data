#State of the program right berfore the function call: t is an integer such that 1 ≤ t ≤ 2⋅10^4. Each test case consists of two integers n and x such that 1 ≤ x ≤ n ≤ 2⋅10^5, and a list of integers p which is a permutation of size n.
def func_1():
    return map(int, input().split())
    #The program returns a map object containing integers parsed from user input.
#Overall this is what the function does:The function processes user input by splitting it and converting each element to an integer, then returns a map object containing these integers.

#State of the program right berfore the function call: t is an integer such that 1 ≤ t ≤ 2⋅10^4, each test case consists of n and x where 1 ≤ x ≤ n ≤ 2⋅10^5, and p is a list of n integers representing a permutation of numbers from 1 to n.
def func_2():
    return list(func_1())
    #The program returns a list generated by func_1(), which we do not have the definition for but is expected to manipulate the permutation list 'p' in some way based on the inputs 'n' and 'x'.
#Overall this is what the function does:The function does not accept any direct parameters. Instead, it relies on the output of another function `func_1()` to generate and return a list. This returned list is expected to be a manipulation of a permutation list `p` based on the values of `n` and `x`. The final state of the program is the return of this manipulated list.

