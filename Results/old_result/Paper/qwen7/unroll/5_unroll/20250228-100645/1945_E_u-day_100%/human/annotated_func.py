#State of the program right berfore the function call: t is an integer such that 1 ≤ t ≤ 2⋅10^4, n is an integer such that 1 ≤ n ≤ 2⋅10^5, x is an integer such that 1 ≤ x ≤ n, and p is a list of n integers representing a permutation where 1 ≤ p_i ≤ n for all i.
def func_1():
    return map(int, input().split())
    #The program returns a map object containing integers converted from user input split by spaces.
#Overall this is what the function does:The function reads a line of space-separated integers from the user, converts each integer to a string, and returns a map object containing these integers.

#State of the program right berfore the function call: t is a positive integer representing the number of test cases, each test case consists of two integers n and x where 1 ≤ x ≤ n ≤ 2⋅10^5, and a permutation p of size n consisting of distinct integers from 1 to n.
def func_2():
    return list(func_1())
    #The program returns a list generated by func_1(), which is not defined in the given code snippet.
#Overall this is what the function does:The function does not accept any parameters and returns a list generated by `func_1()`. The content of the list depends on the implementation of `func_1()`, but it is expected to produce a list of some kind based on the input parameters that `func_1()` processes.

