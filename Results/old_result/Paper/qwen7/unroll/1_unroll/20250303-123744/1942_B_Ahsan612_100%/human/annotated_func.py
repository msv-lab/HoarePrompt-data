#State of the program right berfore the function call: t is a positive integer representing the number of test cases, and for each test case, n is a positive integer such that 1 ≤ n ≤ 2 \cdot 10^5, and a is a list of n integers where -n ≤ a_i ≤ n for all i.
def func():
    for _ in range(int(input())):
        n = int(input())
        
        ar = list(map(int, input().split()))
        
        res = [None] * n
        
        mex = n
        
        for i in range(len(ar) - 1, -1, -1):
            res[i] = mex - ar[i]
            if mex > mex - ar[i]:
                mex = mex - ar[i]
        
        print(' '.join(str(x) for x in res))
        
    #State: Output State: t test cases, each with n integers representing the result of the transformation applied to the input list ar. For each test case, the result list res is generated by iterating over the input list ar in reverse order, calculating the minimum excluded number (mex) for each position, and storing the difference between mex and the current element of ar in the corresponding position of res. The final output for each test case is a space-separated string of these differences.
#Overall this is what the function does:The function processes a series of test cases, where each test case consists of a positive integer \( n \) and a list of \( n \) integers \( a \). For each test case, it calculates a new list \( res \) by iterating over the input list \( ar \) in reverse order, determining the minimum excluded number (mex) for each position, and storing the difference between mex and the current element of \( ar \) in the corresponding position of \( res \). Finally, it outputs the result for each test case as a space-separated string of these differences.

