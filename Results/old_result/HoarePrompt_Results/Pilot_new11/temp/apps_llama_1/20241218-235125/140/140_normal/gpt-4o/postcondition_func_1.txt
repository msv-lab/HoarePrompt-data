The function `has_cycle` checks if a directed graph contains nodes that are not reachable from the initial set of nodes with an in-degree of 0. It accepts a dictionary `graph` representing a directed graph and an implicit integer `n` representing the number of vertices in the graph, where each key in the dictionary is a vertex and its corresponding value is a list of vertices that the key vertex has a directed edge to. The function returns `True` if the graph contains nodes that are not reachable from the initial set of nodes with an in-degree of 0, indicating the presence of a cycle or disconnected nodes; otherwise, it returns `False`. The function handles all potential cases, including empty graphs, graphs with multiple connected components, and graphs with no nodes having an in-degree of 0. However, it assumes that the input graph is a valid dictionary representation of a directed graph and does not contain any self-loops or multiple edges between the same pair of vertices. The function's return value indicates whether the graph contains a cycle or has disconnected nodes, but does not provide any information about the specific cycle or disconnected nodes.