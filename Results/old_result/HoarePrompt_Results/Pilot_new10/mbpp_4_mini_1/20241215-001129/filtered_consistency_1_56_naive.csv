Task ID,Dataset,model_created,model_run,description,Code,Test Result,Correctness,Post,original correctness,naive correctness,annotated correctness,annotated correctness simple,naive no fsl correctness,Correctness no fsl,data file,simple verify,complex verify,default verify,simple verify no fsl,complex verify no fsl,default verify no fsl,unique_id,consistency
179,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a python function to find the cube sum of first n even natural numbers.,"def cube_Sum(n):
    even_numbers = [2 * i for i in range(1, n + 1)]
    cube_sum = sum(x ** 3 for x in even_numbers)
    return cube_sum

# Tests
assert cube_Sum(2) == 72
assert cube_Sum(3) == 288
assert cube_Sum(4) == 800
",,True,post,True,False,True,True,False,True,selected_pilot_75_mbpp.json,False,True,True,True,True,True,179_gpt-4o,0.5
146,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a function to find the list of maximum length in a list of lists.,"def max_length(list_of_lists):
    max_len = 0
    max_list = []
    
    for lst in list_of_lists:
        if len(lst) > max_len:
            max_len = len(lst)
            max_list = lst
            
    return (max_len, max_list)

# Test cases
assert max_length([[0], [1, 3], [5, 7], [9, 11], [13, 15, 17]]) == (3, [13, 15, 17])
assert max_length([[1], [5, 7], [10, 12, 14, 15]]) == (4, [10, 12, 14, 15])
assert max_length([[5], [15, 20, 25]]) == (3, [15, 20, 25])
",,False,post,True,False,True,False,True,False,selected_pilot_75_mbpp.json,False,False,False,True,True,True,146_gpt-4o,0.5
222,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a function to remove lowercase substrings from a given string.,"def remove_lowercase(s: str) -> str:
    return ''.join([char for char in s if char.isupper()])

# Testing the function
assert remove_lowercase(""PYTHon"") == 'PYTH'
assert remove_lowercase(""FInD"") == 'FID'
assert remove_lowercase(""STRinG"") == 'STRG'
",,True,post,True,True,False,True,True,True,selected_pilot_75_mbpp.json,True,True,True,True,True,False,222_gpt-4o,0.6666666666666666
161,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a function to find the n'th lucas number.,"def find_lucas(n):
    if n == 0:
        return 2
    elif n == 1:
        return 1
    else:
        a, b = 2, 1
        for _ in range(2, n + 1):
            a, b = b, a + b
        return b

# Test cases
assert find_lucas(9) == 76
assert find_lucas(4) == 7
assert find_lucas(3) == 4
",,False,post,True,False,False,False,False,False,selected_pilot_75_mbpp.json,False,True,True,True,True,True,161_gpt-4o,0.6666666666666666
290,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,"Write a function that checks if a strings contains 'z', except at the start and end of the word.","def text_match_wordz_middle(s):
    # Check if 'z' is in the string and not at the start or end
    if 'z' in s[1:-1]:
        return True
    return False

# Test cases
assert text_match_wordz_middle(""pythonzabc."") == True
assert text_match_wordz_middle(""zxyabc."") == False
assert text_match_wordz_middle(""  lang  ."") == False
",,True,post,True,False,True,True,False,False,selected_pilot_75_mbpp.json,True,True,True,True,True,True,290_gpt-4o,0.6666666666666666
182,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,Write a function to extract only the rear index element of each string in the given tuple.,"def extract_rear(strings):
    return [s[-1] for s in strings]
",,False,post,True,True,False,True,False,False,selected_pilot_75_mbpp.json,True,False,False,True,True,False,182_llama3point1-70b,0.6666666666666666
117,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a python function that returns the number of integer elements in a given list.,"def count_integer(lst):
    return sum(1 for x in lst if isinstance(x, int))

# Provided test cases
assert count_integer([1, 2, 'abc', 1.2]) == 2
assert count_integer([1, 2, 3]) == 3
assert count_integer([1, 1.2, 4, 5.1]) == 2
",,True,post,True,False,True,True,True,False,selected_pilot_75_mbpp.json,False,False,True,True,True,True,117_gpt-4o,0.6666666666666666
307,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,Write a python function to find the index of smallest triangular number with n digits.,"def find_Index(n):
    import math
    idx = 1
    while True:
        triangular_num = (idx * (idx + 1)) // 2
        if len(str(triangular_num)) >= n:
            return idx
        idx += 1
",,True,post,False,True,True,True,True,True,selected_pilot_75_mbpp.json,True,True,False,True,True,True,307_llama3point1-70b,0.5
307,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a python function to find the index of smallest triangular number with n digits.,"def find_Index(n):
    k = 1
    while True:
        triangular_number = k * (k + 1) // 2
        if len(str(triangular_number)) == n:
            return k
        k += 1

# Test cases
assert find_Index(2) == 4
assert find_Index(3) == 14
assert find_Index(4) == 45
",,True,post,False,True,True,True,False,True,selected_pilot_75_mbpp.json,True,True,True,True,True,False,307_gpt-4o,0.5
8,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,Write a python function to remove first and last occurrence of a given character from the string.,"def remove_Occ(s, char):
    first_occurrence = s.find(char)
    last_occurrence = s.rfind(char)
    
    if first_occurrence != -1 and last_occurrence != -1:
        if first_occurrence == last_occurrence:
            return s.replace(char, '', 1)
        else:
            return s[:first_occurrence] + s[first_occurrence+1:last_occurrence] + s[last_occurrence+1:]
    else:
        return s
",,False,post,True,False,True,True,False,False,selected_pilot_75_mbpp.json,False,True,True,True,True,True,8_llama3point1-70b,0.6666666666666666
159,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a function to find the volume of a cone.,"import math

def volume_cone(radius, height):
    return (1/3) * math.pi * (radius ** 2) * height

# Tests
assert math.isclose(volume_cone(5, 12), 314.15926535897927, rel_tol=0.001)
assert math.isclose(volume_cone(10, 15), 1570.7963267948965, rel_tol=0.001)
assert math.isclose(volume_cone(19, 17), 6426.651371693521, rel_tol=0.001)
",,False,post,True,True,False,True,True,False,selected_pilot_75_mbpp.json,True,True,False,True,False,False,159_gpt-4o,0.6666666666666666
271,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,"Write a function that takes a tuple of tuples and returns a list where each element is the average of the corresponding values from each tuple. For each position, compute the average of values from all tuples at that position.","def average_tuple(tuples):
    return [sum(val) / len(tuples) for val in zip(*tuples)]
",,False,post,True,False,False,True,False,False,selected_pilot_75_mbpp.json,False,False,False,False,False,False,271_llama3point1-70b,0.6666666666666666
96,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a function to check if all the elements in tuple have same data type or not.,"def check_type(tup):
    if not tup:
        return True  # An empty tuple can be considered as having the same type for all elements.
    
    first_type = type(tup[0])
    for element in tup:
        if type(element) != first_type:
            return False
    return True

# Test cases
assert check_type((5, 6, 7, 3, 5, 6)) == True
assert check_type((1, 2, ""4"")) == False
assert check_type((3, 2, 1, 4, 5)) == True
",,False,post,True,True,False,True,True,False,selected_pilot_75_mbpp.json,True,False,False,True,False,False,96_gpt-4o,0.6666666666666666
297,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,"Write a function that takes as input a tuple of numbers (t_1,...,t_{N+1}) and returns a tuple of length N where the i-th element of the tuple is equal to t_i * t_{i+1}.","def multiply_elements(t):
    return tuple(t[i] * t[i+1] for i in range(len(t) - 1))

# Test cases
assert multiply_elements((1, 5, 7, 8, 10)) == (5, 35, 56, 80)
assert multiply_elements((2, 4, 5, 6, 7)) == (8, 20, 30, 42)
assert multiply_elements((12, 13, 14, 9, 15)) == (156, 182, 126, 135)
assert multiply_elements((12,)) == ()
",,False,post,True,False,True,True,False,False,selected_pilot_75_mbpp.json,True,True,True,True,False,True,297_gpt-4o,0.5
216,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,Write a python function to check whether the given list contains consecutive numbers or not.,"def check_Consecutive(lst):
    lst.sort()
    return all(lst[i] - lst[i-1] == 1 for i in range(1, len(lst))) and len(lst) == len(set(lst))
",,False,post,True,False,True,False,False,False,selected_pilot_75_mbpp.json,True,True,True,False,True,False,216_llama3point1-70b,0.5
197,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,Write a python function to count the occurence of all elements of list in a tuple.,"def count_Occurrence(tup, lst):
    return sum(tup.count(element) for element in lst)
",,True,post,True,True,True,False,True,True,selected_pilot_75_mbpp.json,True,True,True,True,True,True,197_llama3point1-70b,0.6666666666666666
197,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a python function to count the occurence of all elements of list in a tuple.,"def count_Occurrence(tup, elements):
    count = sum(tup.count(element) for element in elements)
    return count

# Test cases
assert count_Occurrence(('a', 'a', 'c', 'b', 'd'), ['a', 'b']) == 3
assert count_Occurrence((1, 2, 3, 1, 4, 6, 7, 1, 4), [1, 4, 7]) == 6
assert count_Occurrence((1, 2, 3, 4, 5, 6), [1, 2]) == 2
",,False,post,True,True,True,True,False,True,selected_pilot_75_mbpp.json,True,True,True,False,True,False,197_gpt-4o,0.6666666666666666
336,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,Write a python function to check whether every odd index contains odd numbers of a given list.,"def odd_position(lst):
    for i in range(len(lst)):
        if i % 2 != 0 and lst[i] % 2 == 0:
            return False
    return True
",,True,post,True,True,False,False,True,True,selected_pilot_75_mbpp.json,False,False,True,True,True,True,336_llama3point1-70b,0.5
14,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,Write a function to find whether a given array of integers contains any duplicate element.,"def test_duplicate(arr):
    return len(arr) != len(set(arr))
",,True,post,True,False,False,False,False,False,selected_pilot_75_mbpp.json,True,True,True,False,True,True,14_llama3point1-70b,0.6666666666666666
141,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,Write a python function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.,"def validate(n):
    str_n = str(n)
    for digit in str_n:
        if str_n.count(digit) > int(digit):
            return False
    return True",,True,post,True,False,True,True,False,False,selected_pilot_75_mbpp.json,False,False,False,False,False,False,141_llama3point1-70b,0.6666666666666666
275,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a function to find the size of the largest subset of a list of numbers so that every pair is divisible.,"def largest_subset(nums):
    if not nums:
        return 0

    nums.sort()
    dp = [1] * len(nums)
    
    for i in range(len(nums)):
        for j in range(i):
            if nums[i] % nums[j] == 0:
                dp[i] = max(dp[i], dp[j] + 1)
    
    return max(dp)

# Testing the function with the provided test cases
assert largest_subset([1, 3, 6, 13, 17, 18]) == 4
assert largest_subset([10, 5, 3, 15, 20]) == 3
assert largest_subset([18, 1, 3, 6, 13, 17]) == 4
",,False,post,True,True,True,True,True,False,selected_pilot_75_mbpp.json,True,True,True,True,True,True,275_gpt-4o,0.6666666666666666
344,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,Write a function to locate the right insertion point for a specified value in sorted order.,"def right_insertion(sorted_list, value):
    for i in range(len(sorted_list)):
        if sorted_list[i] >= value:
            return i
    return len(sorted_list)
",,True,post,False,True,True,True,True,True,selected_pilot_75_mbpp.json,True,True,True,True,True,True,344_llama3point1-70b,0.6666666666666666
344,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a function to locate the right insertion point for a specified value in sorted order.,"import bisect

def right_insertion(sorted_list, value):
    return bisect.bisect_right(sorted_list, value)

# Test cases
assert right_insertion([1,2,4,5],6)==4
assert right_insertion([1,2,4,5],3)==2
assert right_insertion([1,2,4,5],7)==4
",,True,post,True,False,True,False,False,True,selected_pilot_75_mbpp.json,True,True,True,False,True,True,344_gpt-4o,0.6666666666666666
326,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a python function to find the minimum difference between any two elements in a given array.,"def find_min_diff(arr, n):
    if n < 2:
        return 0  # If array has less than 2 elements, no valid difference can be found
    
    arr = sorted(arr)
    min_diff = float('inf')
    
    for i in range(n - 1):
        diff = arr[i+1] - arr[i]
        if diff < min_diff:
            min_diff = diff
            
    return min_diff

# Testing the function based on the provided assertions
assert find_min_diff((1,5,3,19,18,25),6) == 1
assert find_min_diff((4,3,2,6),4) == 1
assert find_min_diff((30,5,20,9),4) == 4
",,False,post,True,False,False,True,True,False,selected_pilot_75_mbpp.json,False,True,True,True,True,True,326_gpt-4o,0.5
21,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a python function to find smallest number in a list.,"def smallest_num(lst):
    return min(lst)

# Tests
assert smallest_num([10, 20, 1, 45, 99]) == 1
assert smallest_num([1, 2, 3]) == 1
assert smallest_num([45, 46, 50, 60]) == 45
",,False,post,True,True,False,True,True,False,selected_pilot_75_mbpp.json,True,False,False,True,False,False,21_gpt-4o,0.5
302,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,Write a function to find the index of the first occurrence of a given number in a sorted array.,"def find_first_occurrence(arr, num):
    for i, x in enumerate(arr):
        if x == num:
            return i
    return -1  # return -1 if num is not found in the array
",,True,post,True,True,True,False,False,True,selected_pilot_75_mbpp.json,True,True,True,True,True,True,302_llama3point1-70b,0.5
4,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a python function to check whether the two numbers differ at one bit position only or not.,"def differ_At_One_Bit_Pos(a, b):
    xor_result = a ^ b
    return xor_result != 0 and (xor_result & (xor_result - 1)) == 0

# Tests
assert differ_At_One_Bit_Pos(13, 9) == True
assert differ_At_One_Bit_Pos(15, 8) == False
assert differ_At_One_Bit_Pos(2, 4) == False
assert differ_At_One_Bit_Pos(2, 3) == True
assert differ_At_One_Bit_Pos(5, 1) == True
assert differ_At_One_Bit_Pos(1, 5) == True
",,False,post,True,True,True,True,False,False,selected_pilot_75_mbpp.json,True,True,True,True,False,False,4_gpt-4o,0.6666666666666666
235,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a function to get the sum of the digits of a non-negative integer.,"def sum_digits(n: int) -> int:
    total = 0
    while n > 0:
        total += n % 10
        n //= 10
    return total

# Testing the function with the provided test cases
assert sum_digits(345) == 12
assert sum_digits(12) == 3
assert sum_digits(97) == 16
",,True,post,True,True,True,True,True,True,selected_pilot_75_mbpp.json,True,True,True,True,True,True,235_gpt-4o,0.6666666666666666
356,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,Write a function to remove all whitespaces from a string.,"def remove_all_spaces(input_str):
    return input_str.replace("" "", """")
",,False,post,True,True,True,False,False,False,selected_pilot_75_mbpp.json,True,True,False,False,False,False,356_llama3point1-70b,0.6666666666666666
315,mbppplus,llama3point1-70b,gpt-4o-mini-2024-07-18,Write a function to add the given tuple to the given list.,"def add_tuple(input_list, input_tuple):
  return input_list + list(input_tuple)
",,False,post,True,True,False,False,True,False,selected_pilot_75_mbpp.json,True,True,True,True,True,True,315_llama3point1-70b,0.6666666666666666
207,mbppplus,gpt-4o,gpt-4o-mini-2024-07-18,Write a function to find the area of a rectangle.,"def rectangle_area(length, width):
    return length * width

# Test the function with the provided assertions
assert rectangle_area(10, 20) == 200
assert rectangle_area(10, 5) == 50
assert rectangle_area(4, 2) == 8
",,True,post,True,False,True,True,True,False,selected_pilot_75_mbpp.json,False,True,False,True,True,True,207_gpt-4o,0.6666666666666666
