#State of the program right berfore the function call: snake_str is a string consisting of lowercase letters and underscores, with at least one underscore present.
def func_1(snake_str):
    components = snake_str.split('_')
    return ''.join(x.capitalize() for x in components)
    #The program returns a string formed by joining the capitalized substrings obtained from the 'components' list, which is generated by splitting 'snake_str' at the underscores.
#Overall this is what the function does:The function accepts a string `snake_str` consisting of lowercase letters and underscores, and returns a string formed by capitalizing each substring obtained from splitting `snake_str` at the underscores. It does not handle cases where the input may lack underscores (although the precondition states there will be at least one underscore), nor does it address potential leading or trailing underscores which would lead to empty components being capitalized and included in the output.

