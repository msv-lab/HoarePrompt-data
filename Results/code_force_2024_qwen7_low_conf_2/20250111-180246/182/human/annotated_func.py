#State of the program right berfore the function call: t is a positive integer such that 1 ≤ t ≤ 10^4; for each test case, n and m are positive integers such that 1 ≤ n, m ≤ 2 ⋅ 10^5; a is a binary string of length n; b is a binary string of length m; the sum of all n values across all test cases does not exceed 2 ⋅ 10^5; similarly, the sum of all m values across all test cases does not exceed 2 ⋅ 10^5.
def func():
    I = input
    for _ in [0] * int(I()):
        I()
        
        a = I() + '*'
        
        k = 0
        
        for x in I():
            k += x == a[k]
        
        print(k)
        
    #State of the program after the  for loop has been executed: `a` is a binary string followed by '*', `k` is the number of times the character at the current index in `I()` matches the character at the same index in `a` (considering `a` is a binary string), `I()` must produce at least as many elements as the final value of `k`, and the final value of `k` is printed.
#Overall this is what the function does:The function processes `t` test cases. For each test case, it reads two positive integers `n` and `m`, and two binary strings `a` and `b` of lengths `n` and `m` respectively. It then calculates the number of positions up to which the string `a` matches the prefix of the string `b` generated by repeatedly appending the next character read from standard input until the count of matching positions equals the length of `a`. The function prints this count for each test case.

