#State of the program right berfore the function call: n is an integer such that 1 <= n <= 10^5, and a is a list of n integers where 1 <= a_i <= 10^5 for all i.
def func():
    N = int(input())
    ans = []
    a = [int(x) for x in input().split()]
    b = [(i, a[i]) for i in range(len(a))]
    S = sorted(b, key=lambda x: x[1])
    m = max(a)
    bits = [0] + [1] * N + [0]
    wtr = [[] for q in range(N)]
    f = []
    g = 1
    last = 0
    for (i, num) in S:
        for e in range(num - last):
            f.append(g)
        
        last = num
        
        bits[i + 1] = 0
        
        g += bits[i] + bits[i + 2] - 1
        
    #State of the program after the  for loop has been executed: `ans` is an empty list, `S` is a sorted version of `b` based on the second element of each tuple, `m` is the maximum value from list `a`, `bits` is a list of length `N+2` starting with `0`, followed by `N` elements each set to `1`, and ending with `0`, `wtr` is a list of `N` empty lists, `f` is a list containing the elements of `g` repeated for each tuple in `S` based on the second element of the tuple, `g` is `1`, `last` is the last `num` value processed in the loop, `i` is the last index processed in the loop.
    for d in range(1, m + 1):
        print(sum([f[d * x] for x in range(1 + (m - 1) // d)]), end=' ')
        
    #State of the program after the  for loop has been executed: `ans` is an empty list, `S` is a sorted version of `b` based on the second element of each tuple, `m` is the maximum value from list `a`, `bits` is a list of length `N+2` starting with `0`, followed by `N` elements each set to `1`, and ending with `0`, `wtr` is a list of `N` empty lists, `f` is a list containing the elements of `g` repeated for each tuple in `S` based on the second element of the tuple, `g` is `1`, `last` is the last `num` value processed in the loop, `i` is the last index processed in the loop, and the sum of the elements in the list generated by the list comprehension for `d = m` is printed.
#Overall this is what the function does:The function processes a list `a` of integers and an integer `n` representing the length of the list `a`. It first sorts the list based on the values of its elements, then calculates a series of values based on the sorted list and prints the sums of these values for each divisor up to the maximum value in `a`. The final state of the program includes an empty `ans` list, a sorted list `S` based on the second element of each tuple, the maximum value `m` from list `a`, a `bits` list of length `N+2` starting with `0`, followed by `N` elements each set to `1`, and ending with `0`, a `wtr` list of `N` empty lists, a `f` list containing the elements of `g` repeated for each tuple in `S` based on the second element of the tuple, `g` is `1`, `last` is the last `num` value processed in the loop, and `i` is the last index processed in the loop. Additionally, the function prints the sum of the elements in the list generated by the list comprehension for each divisor from `1` to `m`.

