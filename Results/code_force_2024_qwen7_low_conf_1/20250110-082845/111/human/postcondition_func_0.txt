The function `func_1` accepts two integer parameters `n` and `k`, where `1 <= n <= 2500` and `1 <= k <= n`, and returns the value `dp[k][n]` which is the sum of binomial coefficients \(\binom{k-1}{n-1}\) modulo `MOD`. The function initializes a 2D list `dp` of size `(k+1) x (n+1)` with all elements set to 0, except for `dp[1][1]` which is set to 1. It then iterates through the `dp` table, filling it according to the binomial coefficient formula \(\binom{i-1}{j-1}\) for each cell `dp[i][j]` using dynamic programming. After populating the `dp` table, the function calculates the final result as the sum of the last row of the `dp` table, i.e., `sum(dp[i][n] for i in range(1, k+1))`, modulo `MOD`. This final result represents the sum of binomial coefficients \(\binom{k-1}{n-1}\) for all relevant combinations. The function handles all specified constraints and ensures that the sum of all `n` values over all test cases does not exceed 2500.