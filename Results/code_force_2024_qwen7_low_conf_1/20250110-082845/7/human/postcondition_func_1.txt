The function `func_2` accepts two parameters: `n`, a positive integer representing the number of vertices in the tree, and `edges`, a list of tuples where each tuple `(u, v)` represents an edge connecting vertices `u` and `v`. The tree is guaranteed to be acyclic with `n-1` edges. The function first constructs an adjacency list representation of the tree. It then calls `func_1` to compute the shortest distances from vertex 1 to all other vertices. Based on these distances, it identifies nodes at each distance level and constructs a list of tuples `(node, d)`, where `node` is a vertex in the tree and `d` is its distance from vertex 1. Finally, it returns the length of this list and the list itself. The function handles the case where there might be no nodes at a particular distance level by checking if `nodes_at_d` is non-empty before appending to the `operations` list. The function does not handle negative integers for `n` or invalid edge inputs as it assumes the inputs are valid based on the problem constraints.