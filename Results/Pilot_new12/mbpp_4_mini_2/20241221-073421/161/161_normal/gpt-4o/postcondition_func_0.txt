The function accepts a non-negative integer `n` and behaves as follows: it returns 2 if `n` is 0, returns 1 if `n` is 1, and for `n â‰¥ 2`, it calculates and returns the `n`-th term of a Fibonacci-like sequence where the base cases are defined as `a_1=2` and `b_1=1`. The sequence follows the rule that each subsequent number is the sum of the two preceding numbers. The function efficiently computes the result using iterative calculations. There are no checks for negative values of `n`, but since the problem states `n` is a non-negative integer, that case does not need to be covered.