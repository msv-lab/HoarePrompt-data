The function `func_1` accepts two integer inputs `n` and `i`, and internally constructs a list of tuples `ca` containing unique integers and their frequencies from the input list, sorted by integer values. It then calculates `md` as the smallest power of 2 such that the number of distinct values is less than or equal to \(2^md\), and generates a prefix sum list `pref` of the frequencies. The function iterates over a range determined by `len(pref) - md`, calculating the number of unchanged elements for each segment and updating the variable `s` with the minimum value found. If the range end is less than or equal to 0, `s` is set to 0. Finally, the function calls `func_2(s)`. Potential edge cases include when the length of `pref` minus `md` is less than or equal to 0, in which case `s` is set to 0. The function does not modify `ca` or `pref` after their initial construction. The final state of the program after the function concludes is that `s` is the minimum number of changes needed, possibly set to 0 if the range condition is met.