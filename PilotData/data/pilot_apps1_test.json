[
    {
        "task_id": "0267",
        "dataset": "apps",
        "model": "llama3-70b",
        "correct": false,
        "description": "You are given two integers $l$ and $r$ ($l \\le r$). Your task is to calculate the sum of numbers from $l$ to $r$ (including $l$ and $r$) such that each number contains at most $k$ different digits, and print this sum modulo $998244353$.\n\nFor example, if $k = 1$ then you have to calculate all numbers from $l$ to $r$ such that each number is formed using only one digit. For $l = 10, r = 50$ the answer is $11 + 22 + 33 + 44 = 110$.\n\n\n-----Input-----\n\nThe only line of the input contains three integers $l$, $r$ and $k$ ($1 \\le l \\le r < 10^{18}, 1 \\le k \\le 10$) — the borders of the segment and the maximum number of different digits.\n\n\n-----Output-----\n\nPrint one integer — the sum of numbers from $l$ to $r$ such that each number contains at most $k$ different digits, modulo $998244353$.\n\n\n-----Examples-----\nInput\n10 50 2\n\nOutput\n1230\n\nInput\n1 2345 10\n\nOutput\n2750685\n\nInput\n101 154 2\n\nOutput\n2189\n\n\n\n-----Note-----\n\nFor the first example the answer is just the sum of numbers from $l$ to $r$ which equals to $\\frac{50 \\cdot 51}{2} - \\frac{9 \\cdot 10}{2} = 1230$. This example also explained in the problem statement but for $k = 1$.\n\nFor the second example the answer is just the sum of numbers from $l$ to $r$ which equals to $\\frac{2345 \\cdot 2346}{2} = 2750685$.\n\nFor the third example the answer is $101 + 110 + 111 + 112 + 113 + 114 + 115 + 116 + 117 + 118 + 119 + 121 + 122 + 131 + 133 + 141 + 144 + 151 = 2189$.",
        "generated_code": "MOD = 998244353\ndef count_numbers(l, r, k):\n    def count(n, k, dp):\n        if k == 0:\n            return 0\n        if (n, k) in dp:\n            return dp[(n, k)]\n        if n < 10**k:\n            dp[(n, k)] = n\n        else:\n            dp[(n, k)] = 9\n            for i in range(1, k):\n                dp[(n, k)] += 9 * 10**(i-1) * (10**(k-i) - 10**(i-1))\n            dp[(n, k)] += (10**(k-1) - 10**(k-2)) * (n // 10**(k-1) - 1)\n            dp[(n, k)] %= MOD\n        return dp[(n, k)]\n\n    dp = {}\n    return (count(r, k, dp) - count(l-1, k, dp)) % MOD\n\nl, r, k = map(int, input().split())\nprint(count_numbers(l, r, k))\n",
        "counter_example": {
            "input": "10 50 2\n",
            "expected": "1230\n",
            "got": "41"
        }
    }
]